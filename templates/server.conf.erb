# Originally /usr/share/doc/packages/openvpn/sample-config-files/tls-home.conf

# General Parameters

# Verbosity. 0=fatal only, 1=startup + nonfatal errs, 2 = cert + crypto names,
# 3=TLS debug stuff, up to 11.
verb 1
mute 10
script-security 2

# Lock key and buffers in memory, keeping them out of the swap file.
mlock

# Use a dynamic tun device.  (Could also be tap, for ether bridging.)
dev tap0

# MTU for tunnel (outer) packets.  Over-conservative default 1300, recommended
# is (link_mtu - 28) deducting the UDP header, i.e. 1472 for a standard link 
# of MTU = 1500.  The default seems to work OK in v2.0.
# link-mtu 1472

# Path MTU discovery, should DF (don't fragment) be set? no, maybe, yes.
# "maybe" uses per-route heuristics to decide.
mtu-disc maybe

# Empirically verify the MTU.  Results logged after about 3 minutes.
# Requires equivalent support on the other end.
mtu-test

# Send pings to keep conntracks alive and detect a dead peer, only if connected.
ping 10
ping-restart 300
ping-timer-rem

# Address of the local tap0 interface
<%- (ip, prefixlen) = @address.split /\// -%>
ifconfig <%= "#{ip} #{IPAddr.new('255.255.255.255').mask(prefixlen).to_s}" %>

# Don't complain about not knowing IP addresses.
ifconfig-nowarn

# Protocol (udp, tcp-server, tcp-client).  udp is the default, and usually best.
proto udp

# Port (default is 5000)
# port 5000
port <%= @port %>

# Preserve root-only files and options.
persist-key
persist-local-ip
persist-remote-ip
persist-tun

# Address to bind to
local <%= @bind_address %>

# Multi-client server
mode server
<%- unless @client_isolation -%>

# Let them talk to each other
client-to-client
<%- end -%>

<%- if not @routes.empty? -%>
# Routes
<%-   @routes.each do |route| -%>
<%-     if route['local'] -%>
route <%= route['network'] %> <%= route['netmask'] %> <%= route['gateway'] %><%= route['local_metric'] ? " #{route['local_metric']}" : '' %>
<%-     end -%>
<%-     if route['push'] -%>
push route <%= route['network'] %> <%= route['netmask'] %> <%= route['gateway'] %><%= route['push_metric'] ? " #{route['push_metric']}" : '' %>
<%-     end
      end -%>

<%- end -%>
# Per-client configuration
client-config-dir <%= @ccd_dir %>

# Connection freq, N connects per S seconds.  Resist denial of service attacks.
connect-freq 1 1

# Allow reconnects with a different IP address (DHCP renew does that sometimes)
float

# Diffie-Hellman parameters (1024 bits) (only needed on server)
dh <%= @ssl_dir %>/dh_params.pem

# This command allows one user to have more than one connection at a time,
# e.g. from multiple machines on his home net.  
duplicate-cn

# Crypto Parameters (must match the peer, can't push them)

# HMAC algorithm (anti-tampering checksum)
auth <%= @hmac_algorithm %>
<%- if @tls_auth_source -%>

# HMAC hardening
tls-auth <%= @ssl_dir %>/tls-auth.key
<%- end -%>

# Cryptographic cipher on main data channel
# cipher AES-128-CBC
cipher <%= @cipher %>

# TLS encryption algo(s), colon separated.  `openvpn --show-tls` for a list. 30
# ciphers in default list starting with DHE-RSA-AES256-SHA (most preferred)
# down to EXP-RC4-MD5 (40 bits).  Use default.

# Use LZO compression (with adaptive shutoff)
comp-lzo

# TLS Parameters

# Polarity of this host (tls-client or tls-server)
tls-server

# Allowable TLS ciphers
tls-cipher <%= @tls_cipher %>

# Certificate Authority file (symbolic links to the real locations)
ca <%= @ssl_dir %>/ca.crt

# Our certificate/public key
cert <%= @ssl_dir %>/server.crt

# Our private key
key <%= @ssl_dir %>/server.key
<%- if @crl_source -%>

# Certificate Revocation List
crl-verify <%= @ssl_dir %>/crl.pem
<%- end -%>
